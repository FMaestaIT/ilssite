/*!
 * linuxday
 * 
 * 
 * @author 
 * @version 1.0.0
 * Copyright 2019. GPLv3 licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility;margin:0;padding:0}body{font-family:Overpass,sans-serif;color:#333}.container{padding:2rem 6rem;font-size:1.1rem}@media (max-width:800px){.container{padding:2rem 1rem}}header{position:fixed;width:100%;background-color:#42ccff;box-shadow:0 0 3px rgba(0,0,0,.35);padding:.5rem 5rem;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}@media (max-width:800px){header{display:block;padding:.5rem;position:relative}}header .logo{margin-right:auto}@media (max-width:800px){header .logo{text-align:center}}header .logo h1{display:inline-block;vertical-align:bottom;margin:0;color:#fff;font-weight:400}header .logo img{width:3rem;vertical-align:middle;margin-right:.25rem}@media (max-width:800px){header nav{text-align:center}}header nav a{display:inline-block;padding:.75rem;padding-top:1rem;text-transform:uppercase;text-decoration:none;font-weight:700;color:#fff}header nav a:hover{background-color:#096c91}main .main-divisor{height:.15rem;background-color:#42ccff}main .hero{padding:6.5rem 10rem 2.1rem;background:#42ccff url(../img/hero.png) no-repeat 100%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}@media (max-width:800px){main .hero{display:block;padding:1rem;text-align:center;background:#42ccff}}main .hero .content{font-size:3rem;line-height:3.25rem;color:#fff;font-weight:700}@media (min-width:800px) and (max-width:1700px){main .hero .content{background:rgba(0,0,0,.7);padding:5px}}main .hero .content .uppercase{text-transform:uppercase}main .hero .content .name{font-style:italic;margin-bottom:1.5rem}main .hero .content small{display:inline-block;font-size:1.25rem}main .hero .content .where{margin-bottom:1.5rem}main .hero .content .register{text-align:center}main .hero .content .register .register-button{display:inline-block;padding:1rem 2rem;padding-top:1.25rem;font-size:1.5rem;font-weight:400;text-transform:uppercase;text-decoration:none;line-height:1.5rem;border:2px solid #fff;color:#fff}main .hero .content .register .register-button:hover{background-color:#2d89a0;border:2px solid #2d89a0}main .about .cols{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}@media (max-width:800px){main .about .cols{display:block}}main .about .col1{-ms-flex:0 0 75%;flex:0 0 75%}main .about .col1 .divisor{margin:.25rem;text-align:center}main .about .col1 .divisor img{height:2rem}main .about .col2{-ms-flex:0 0 25%;flex:0 0 25%;text-align:center;font-size:2rem}@media (max-width:800px){main .about .col2{margin-top:2rem}}main .about .col2 .about-detail{margin-bottom:1rem}main .about .col2 .about-detail .big{font-size:3rem;margin-bottom:-1rem}main .about .col2 .about-detail:last-of-type{margin-bottom:0}main h2{margin-bottom:1rem}main .program{background-color:#42ccff}main .program .cols{display:-ms-flexbox;display:flex}@media (max-width:800px){main .program .cols{display:block}}main .program .col1{-ms-flex:0 0 65%;flex:0 0 65%}main .program .col1 .talks{padding-left:.5rem}main .program .col1 .talks .talk{margin-bottom:.25rem}@media (max-width:1024px){main .program .col1 .talks .talk{border-bottom:1px solid #f5f5f5}main .program .col1 .talks .talk:last-of-type{border-bottom:0}}main .program .col1 .talks .time{display:inline-block;vertical-align:top;margin-right:.5rem;width:40px}@media (max-width:1024px){main .program .col1 .talks .time{display:block}}main .program .col1 .talks .next{display:inline-block}@media (max-width:1024px){main .program .col1 .talks .next{margin-left:1.5rem}}main .program .col1 .talks .title{display:inline-block;font-weight:700;font-size:1.25rem}@media (max-width:800px){main .program .col2{margin-top:2rem}}main .program h2{color:#fff}main .program .program-content{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center}main .program .program-content .speaker-wrapper{-ms-flex-positive:1;flex-grow:1;-ms-flex-preferred-size:auto;flex-basis:auto;text-align:center;max-width:25%;min-width:25%;margin-bottom:1.5rem}@media (min-width:1800px){main .program .program-content .speaker-wrapper{max-width:14%;min-width:14%}}@media (max-width:801px){main .program .program-content .speaker-wrapper{max-width:50%;min-width:50%}}@media (max-width:480px){main .program .program-content .speaker-wrapper{max-width:100%;min-width:100%}}main .program .program-content .speaker-wrapper .speaker{height:100%;margin-right:1.5rem;padding:1rem;text-align:center;background-color:#fff;box-shadow:0 2px 3px rgba(0,0,0,.15)}@media (max-width:480px){main .program .program-content .speaker-wrapper .speaker{margin-right:0}}main .program .program-content .speaker-wrapper img{width:8rem;border-radius:50%}main .program .program-content .speaker-wrapper .details .name{font-weight:700}main .organizers .coc-container{margin-top:1rem;text-align:center}main .organizers .coc-container a{color:#2d89a0}main .organizers .organizers-content{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}main .organizers .organizers-content .organizer{-ms-flex:0 0 15%;flex:0 0 15%;text-align:center}main .organizers .organizers-content .organizer img{padding:.25rem;margin-bottom:1.5rem}main .organizers .organizers-content .organizer img.square{max-width:200px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
